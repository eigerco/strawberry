name: Go CI

on:
  pull_request:

env:
  GO_VERSION: '1.23.8'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: set up go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Check Go formatting
      run: |
        fmt_output=$(go fmt ./...)
        if [ -n "$fmt_output" ]; then
          echo "The following files need formatting:"
          echo "$fmt_output"
          exit 1
        else
          echo "All files are properly formatted."
        fi

  lint:
    needs: [ fmt ]
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: create rust lib placeholders
        run: |
          mkdir -p internal/erasurecoding/reedsolomon/lib
          touch internal/erasurecoding/reedsolomon/lib/liberasurecoding.so
          mkdir -p internal/crypto/bandersnatch/lib
          touch internal/crypto/bandersnatch/lib/libbandersnatch.so

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.8
          args: --timeout=5m

  test:
    needs: [ lint ]
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: execute unit tests
        run: make test

      - name: execute integration tests
        run: make integration

      - name: execute traces
        run: make traces
